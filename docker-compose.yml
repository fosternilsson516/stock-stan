version: '3.8'  # Specify Docker Compose version

services:
  postgresql:
    image: postgres
    restart: always  # Restart the container if it stops
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password  # You'll want to handle this more securely in production
    networks:
      - pg-network

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "fosternilsson99@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: password  # Secure this in production
    networks:
      - pg-network

  flask_app:
    build: .  
    environment:
      - DB_HOST=postgresql
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=postgres
    volumes:
      - ./templates/:/app/templates/
      - ./static/:/app/static/ 
    networks:
      - pg-network
      - cloudflare-nginx

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./cloudflare_origin_cert.pem:/etc/ssl/certs/cloudflare_origin_cert.pem
      - ./cloudflare_origin_key.pem:/etc/ssl/private/cloudflare_origin_key.pem
    networks:
      - cloudflare-nginx
  
  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run --token <YOUR_TOKEN> --url http://my-nginx:443
    networks:
      - cloudflare-nginx

networks:
  pg-network:
  cloudflare-nginx:
